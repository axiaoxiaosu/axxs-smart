<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.db.dao.MplMenuDAO">
    <resultMap id="BaseResultMap" type="com.smart.db.model.MplMenu">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="menu_name" jdbcType="VARCHAR" property="menuName"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="is_show" jdbcType="CHAR" property="isShow"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="sort" jdbcType="VARCHAR" property="sort"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="parentName" jdbcType="VARCHAR" property="parentName"/>
        <result column="btn_type" jdbcType="CHAR" property="btnType"/>
        <result column="parentUrl" jdbcType="VARCHAR" property="parentUrl"/>
    </resultMap>


    <resultMap id="BaseResultMenuDataMap" type="com.smart.db.model.MenuData">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="menu_name" jdbcType="VARCHAR" property="menuName"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="is_show" jdbcType="CHAR" property="isShow"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="btn_type" jdbcType="CHAR" property="btnType"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, url, menu_name, `type`, is_show, parent_id, icon, `sort`, create_time, create_user, 
    update_time, update_user, remark,btn_type,title
  </sql>

    <sql id="Base_Column_List_Main">
    main.id, main.url, main.menu_name, main.type, main.is_show, main.parent_id, main.icon, main.sort, main.create_time, main.create_user,
    main.update_time, main.update_user, main.remark,main.btn_type
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mpl_menu
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mpl_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.smart.db.model.MplMenu">
    insert into mpl_menu (id, url, menu_name, 
      `type`, is_show, parent_id, icon, 
      `sort`, create_time, create_user, 
      update_time, update_user, remark,btn_type,title
      )
    values (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{isShow,jdbcType=CHAR}, #{parentId,jdbcType=BIGINT}, #{icon,jdbcType=VARCHAR}, 
      #{sort,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},#{btnType,jdbcType=CHAR},#{title,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.smart.db.model.MplMenu" useGeneratedKeys="true">
        insert into mpl_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="menuName != null">
                menu_name,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="sort != null">
                `sort`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="btnType != null">
                btn_type,
            </if>
            <if test="title != null">
                title,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="menuName != null">
                #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=CHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="btnType != null">
                #{btnType,jdbcType=CHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smart.db.model.MplMenu">
        update mpl_menu
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="menuName != null">
                menu_name = #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=CHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=CHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                `sort` = #{sort,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="btnType != null">
                btn_type = #{btnType,jdbcType=CHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smart.db.model.MplMenu">
    update mpl_menu
    set url = #{url,jdbcType=VARCHAR},
      menu_name = #{menuName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=CHAR},
      is_show = #{isShow,jdbcType=CHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      icon = #{icon,jdbcType=VARCHAR},
      `sort` = #{sort,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      btn_type = #{btnType,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectMplMenuByUserName" resultMap="BaseResultMenuDataMap">
        select * from( SELECT
        <include refid="Base_Column_List_Main"/>,
        mme.menu_name as parentName
        FROM
        mpl_menu main
        LEFT JOIN mpl_role_menu rm ON main.id = rm.menu_id
        LEFT JOIN mpl_role mr ON mr.id = rm.role_id
        LEFT JOIN mpl_user_role mur ON mur.role_id = mr.id
        LEFT JOIN mpl_user mu ON mu.id = mur.user_id
        LEFT JOIN mpl_menu mme on mme.id = main.parent_id
        where mu.username = #{username}
        order by
        main.sort) aa
        group by
        aa.parent_id,
        aa.id
    </select>

    <select id="mensByRole" resultMap="BaseResultMap">
            SELECT
            main.*
        FROM
            mpl_menu main
        LEFT JOIN mpl_role_menu rm ON main.id = rm.menu_id
        LEFT JOIN mpl_role mr ON mr.id = rm.role_id
        where mr.id = #{roleId}
    </select>


    <insert id="roleBindMent">
        insert into mpl_role_menu(menu_id,role_id) values
        <foreach collection="ids" index="index" item="item" separator=",">
            (#{item},#{roid})
        </foreach>
    </insert>

    <delete id="deleteByRoId">
        delete from mpl_role_menu where role_id in (
        <foreach collection="roId" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>


    <delete id="deleteMenu">
        delete from mpl_menu where id in (
        <foreach collection="ids" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>


    <select id="selectByNameUrlPar" resultMap="BaseResultMap">
        select * from mpl_menu where menu_name =#{menuName} and

        <if test="url != null and url != ''">
            url =#{url} and
        </if>
        parent_id =#{parendId}
    </select>

    <select id="selectMplMenu" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List_Main"/>,
        mme.menu_name as parentName,
        mme.url as parentUrl
        FROM
        mpl_menu main
        LEFT JOIN mpl_role_menu rm ON main.id = rm.menu_id
        LEFT JOIN mpl_role mr ON mr.id = rm.role_id
        LEFT JOIN mpl_user_role mur ON mur.role_id = mr.id
        LEFT JOIN mpl_user mu ON mu.id = mur.user_id
        LEFT JOIN mpl_menu mme on mme.id = main.parent_id
        where mu.username = #{username}
        <if test="menuName!=null and menuName!=''">
            and main.title like concat ('%',#{menuName},'%')
        </if>
        <if test="types!=null">
            and main.type in (
            <foreach collection="types" index="index" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="isShow">
            and main.is_Show=1
        </if>
        order by
        main.sort
    </select>

    <select id="seleteByIds" resultType="java.lang.Integer">

        select 1 from DUAL WHERE exists (
        select 1 from mpl_menu where parent_id in (
        <foreach collection="ids" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
        )

    </select>

    <select id="selectByUserNameAndUrl" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_Main"/>
        from mpl_menu main
        left join mpl_role_menu rom on main.id =rom.menu_id
        left join mpl_user_role usr on usr.role_id = rom.role_id
        left join mpl_user usert on usert.id = usr.user_id
        where usert.username = #{username} and main.parent_id = #{menuId} and `type` = #{type}
    </select>


</mapper>