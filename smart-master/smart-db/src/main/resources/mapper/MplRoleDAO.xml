<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.db.dao.MplRoleDAO">
    <resultMap id="BaseResultMap" type="com.smart.db.model.MplRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_name, `status`, create_time, create_user, update_time, update_user, remark
  </sql>

    <sql id="Base_Column_Main_List">
    main.id, main.role_name, main.status, main.create_time, main.create_user, main.update_time, main.update_user, main.remark
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mpl_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mpl_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyProperty="id" parameterType="com.smart.db.model.MplRole" useGeneratedKeys="true">
    insert into mpl_role (id, role_name, `status`, 
      create_time, create_user, update_time, 
      update_user, remark)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.smart.db.model.MplRole">
        insert into mpl_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smart.db.model.MplRole">
        update mpl_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smart.db.model.MplRole">
    update mpl_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectRoleByName" resultMap="BaseResultMap">
    SELECT
        main.id,
        u.username,
        u.id AS user_id,
        main.role_name,
        main.status
    FROM
        mpl_role main
    LEFT JOIN mpl_user_role ro ON main.id = ro.role_id
    LEFT JOIN mpl_user u ON u.id = ro.user_id
    WHERE
        u.username = #{username}
  </select>
    <select id="selectRoleByRolName" resultType="java.lang.Integer">
    select count(1) from  mpl_role where role_name = #{roleName}
  </select>

    <select id='findRoles' resultMap="BaseResultMap">
        select
        <include refid="Base_Column_Main_List"/>
        ,m_u.username as create_name
        from mpl_role main
        left join mpl_user m_u on main.create_user = m_u.id
        <if test="roleName!=null and roleName!=''">
            where role_name like concat('%',#{roleName} ,'%')
        </if>
    </select>

    <select id="selectByRoleIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mpl_role where id in (
        <foreach collection="ids" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <delete id="deleteByRoleIds">
        delete from mpl_role
        where id in (
        <foreach collection="ids" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>


</mapper>